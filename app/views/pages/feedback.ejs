<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Feedback do Cliente</title>
    <link rel="stylesheet" href="css/feedbackmobile.css">
</head>
<body>
    <!-- Header -->
    <header>
        <div class="container">
            <img src="/imagens/LOGO_SOLLARIUM (8).png" alt="Logo" class="logo">
            <button class="menu-toggle" id="menu-toggle" aria-expanded="false">☰</button>
            <nav id="nav-menu" aria-hidden="true">
                <ul>
                    <li><a href="#">Home</a></li>
                    <li><a href="#">Sobre</a></li>
                    <li><a href="#">Contato</a></li>
                </ul>
            </nav>
        </div>
    </header>

    <main>
        <section class="feedback-section">
            <h2>Feedbacks</h2>
            <section class="feedback">
                <% feedbacks.forEach(feedback => { %>
                    <article class="feedback-item" data-date="<%= feedback.date.toLocaleDateString() %>" data-quality="<%= feedback.quality %>" data-speed="<%= feedback.speed %>" data-results="<%= feedback.results %>">
                        <header class="feedback-header">
                            <span class="client-name"><%= feedback.clientName %></span>
                            <time class="feedback-date" datetime="<%= feedback.date.toISOString() %>"><%= feedback.date.toLocaleDateString() %></time>
                        </header>
                        <div class="feedback-ratings">
                            <div class="rating">
                                <span>Qualidade:</span>
                                <div class="stars"><%= '★'.repeat(feedback.quality) + '☆'.repeat(5 - feedback.quality) %></div>
                            </div>
                            <div class="rating">
                                <span>Rapidez:</span>
                                <div class="stars"><%= '★'.repeat(feedback.speed) + '☆'.repeat(5 - feedback.speed) %></div>
                            </div>
                            <div class="rating">
                                <span>Resultados:</span>
                                <div class="stars"><%= '★'.repeat(feedback.results) + '☆'.repeat(5 - feedback.results) %></div>
                            </div>
                        </div>
                    </article>
                <% }) %>
            </section>
        </section>
    </main>
    <!-- JavaScript -->
    <script>
        document.getElementById('menu-toggle').addEventListener('click', function() {
            var navMenu = document.getElementById('nav-menu');
            var isActive = navMenu.classList.toggle('active');
            this.setAttribute('aria-expanded', isActive);
            navMenu.setAttribute('aria-hidden', !isActive);
        });

        document.querySelector('.select-selected').addEventListener('click', function() {
            this.parentElement.classList.toggle('open');
        });

        document.querySelectorAll('.select-items div').forEach(item => {
            item.addEventListener('click', function() {
                const selectedText = this.textContent;
                this.parentElement.previousElementSibling.textContent = selectedText;
                this.parentElement.classList.remove('open');
                filterFeedbacks(this.dataset.filter);
            });
        });

        // Close the dropdown if the user clicks outside of it
        window.addEventListener('click', function(e) {
            if (!e.target.matches('.select-selected')) {
                document.querySelectorAll('.custom-select').forEach(select => {
                    select.classList.remove('open');
                });
            }
        });

        function filterFeedbacks(filter) {
            const feedbackItems = document.querySelectorAll('.feedback-item');
            const feedbackArray = Array.from(feedbackItems);

            switch (filter) {
                case 'recent':
                    feedbackArray.sort((a, b) => new Date(b.dataset.date) - new Date(a.dataset.date));
                    break;
                case 'oldest':
                    feedbackArray.sort((a, b) => new Date(a.dataset.date) - new Date(b.dataset.date));
                    break;
                case 'lowest':
                    feedbackArray.sort((a, b) => 
                        (parseInt(a.dataset.quality) + parseInt(a.dataset.speed) + parseInt(a.dataset.results)) - 
                        (parseInt(b.dataset.quality) + parseInt(b.dataset.speed) + parseInt(b.dataset.results))
                    );
                    break;
                case 'highest':
                    feedbackArray.sort((a, b) => 
                        (parseInt(b.dataset.quality) + parseInt(b.dataset.speed) + parseInt(b.dataset.results)) - 
                        (parseInt(a.dataset.quality) + parseInt(a.dataset.speed) + parseInt(a.dataset.results))
                    );
                    break;
            }

            const feedbackContainer = document.querySelector('.feedback');
            feedbackContainer.innerHTML = '';
            feedbackArray.forEach(item => feedbackContainer.appendChild(item));
        }
    </script>
</body>
</html>
