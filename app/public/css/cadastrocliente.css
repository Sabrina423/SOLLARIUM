@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap');

body {
    font-family: 'Poppins', sans-serif;
    background-color: #f5f5f5;
    margin: 0;
    padding: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
}

.container {
    display: flex;
    background: #fff;
    box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
    border-radius: 15px;
    overflow: hidden;
    width: 100%;
    max-width: 900px;
}

.hero {
    flex: 1;
    background: url('/imagens/pexels-tomfisk-9893729.jpg') no-repeat center center;
    background-size: cover;
    display: none;
}

main {
    flex: 1;
    padding: 40px;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

.logo img {
    display: block;
    margin: 0 auto 30px;
    width: 120px;
}

form {
    display: flex;
    flex-direction: column;
}

.input-group {
    display: flex;
    flex-direction: column;
    gap: 15px;
    margin-bottom: 20px;
}

input, select {
    padding: 12px 15px;
    font-size: 16px;
    border: 1px solid #ccc;
    border-radius: 5px;
    outline: none;
    transition: border-color 0.3s ease;
}

input:focus, select:focus {
    border-color: #ff6600;
}

.password-container {
    display: flex;
    flex-direction: column;
    gap: 15px;
}

button {
    padding: 12px 20px;
    background-color: black;
    border: none;
    color: #fff;
    font-size: 18px;
    font-weight: 500;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.3s ease, transform 0.3s ease;
}

button:hover {
    background-color:rgb(41, 40, 40);
    transform: translateY(-2px);
}

button:active {
    background-color: rgb(54, 54, 54);
}

@media screen and (min-width: 768px) {
    .container {
        flex-direction: row;
    }

    .hero {
        display: block;
    }

    .input-group {
        flex-direction: row;
        justify-content: space-between;
    }

    .input-group input, .input-group select {
        width: 48%;
    }
}
coloque a√≠ o css apropriado